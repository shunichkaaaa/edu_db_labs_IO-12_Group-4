(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{699:function(n,e,r){"use strict";r.r(e);var s=r(47),t=Object(s.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення"}},[n._v("#")]),n._v(" Реалізація інформаційного та програмного забезпечення")]),n._v(" "),r("p",[n._v("В рамках проекту розробляється:")]),n._v(" "),r("h2",{attrs:{id:"sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[n._v("#")]),n._v(" SQL-скрипт для створення на початкового наповнення бази даних")]),n._v(" "),r("div",{staticClass:"language--- MySQL Script generated by MySQL Workbench extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("-- Wed Apr 26 20:57:08 2023\n-- Model: New Model    Version: 1.0\n-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `mydb` ;\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;\nUSE `mydb` ;\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Role`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Role` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Role` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(180) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`User`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`User` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`User` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `username` VARCHAR(45) NOT NULL,\n  `email` VARCHAR(45) NOT NULL,\n  `password` VARCHAR(45) NOT NULL,\n  `avatar` JSON NULL,\n  `Role` INT NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_User_Role1_idx` (`Role` ASC) VISIBLE,\n  CONSTRAINT `fk_User_Role1`\n    FOREIGN KEY (`Role`)\n    REFERENCES `mydb`.`Role` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Workspace`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Workspace` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Workspace` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `description` VARCHAR(180) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Project`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Project` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Project` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `Workspace` INT NOT NULL,\n  `description` VARCHAR(180) NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Project_Workspace1_idx` (`Workspace` ASC) VISIBLE,\n  CONSTRAINT `fk_Project_Workspace1`\n    FOREIGN KEY (`Workspace`)\n    REFERENCES `mydb`.`Workspace` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Board`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Board` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Board` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `Project` INT NOT NULL,\n  `description` VARCHAR(180) NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Board_Project1_idx` (`Project` ASC) VISIBLE,\n  CONSTRAINT `fk_Board_Project1`\n    FOREIGN KEY (`Project`)\n    REFERENCES `mydb`.`Project` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Status`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Status` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Status` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  PRIMARY KEY (`id`, `name`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Task`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Task` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Task` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `title` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(180) NULL,\n  `responsible` INT NOT NULL,\n  `deadline` DATETIME NULL,\n  `board` INT NOT NULL,\n  `Status` INT NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Task_Board1_idx` (`board` ASC) VISIBLE,\n  INDEX `fk_Task_User1_idx` (`responsible` ASC) VISIBLE,\n  INDEX `fk_Task_Status1_idx` (`Status` ASC) VISIBLE,\n  CONSTRAINT `fk_Task_Board1`\n    FOREIGN KEY (`board`)\n    REFERENCES `mydb`.`Board` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Task_User1`\n    FOREIGN KEY (`responsible`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Task_Status1`\n    FOREIGN KEY (`Status`)\n    REFERENCES `mydb`.`Status` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`State`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`State` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`State` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NULL,\n  `description` VARCHAR(180) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Action`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`Action` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`Action` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `Workspace` INT NULL,\n  `Project` INT NULL,\n  `Board` INT NULL,\n  `User` INT NOT NULL,\n  `State` INT NOT NULL,\n  `Task` INT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Action_Board1_idx` (`Board` ASC) VISIBLE,\n  INDEX `fk_Action_User1_idx` (`User` ASC) VISIBLE,\n  INDEX `fk_Action_Project1_idx` (`Project` ASC) VISIBLE,\n  INDEX `fk_Action_Workspace1_idx` (`Workspace` ASC) VISIBLE,\n  INDEX `fk_Action_State1_idx` (`State` ASC) VISIBLE,\n  INDEX `fk_Action_Task1_idx` (`Task` ASC) VISIBLE,\n  CONSTRAINT `fk_Action_Board1`\n    FOREIGN KEY (`Board`)\n    REFERENCES `mydb`.`Board` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Action_User1`\n    FOREIGN KEY (`User`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Action_Project1`\n    FOREIGN KEY (`Project`)\n    REFERENCES `mydb`.`Project` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Action_Workspace1`\n    FOREIGN KEY (`Workspace`)\n    REFERENCES `mydb`.`Workspace` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Action_State1`\n    FOREIGN KEY (`State`)\n    REFERENCES `mydb`.`State` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Action_Task1`\n    FOREIGN KEY (`Task`)\n    REFERENCES `mydb`.`Task` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`StateResolve`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `mydb`.`StateResolve` ;\n\nCREATE TABLE IF NOT EXISTS `mydb`.`StateResolve` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `rule` VARCHAR(45) NOT NULL,\n  `State` INT NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_StateResolve_State1_idx` (`State` ASC) VISIBLE,\n  CONSTRAINT `fk_StateResolve_State1`\n    FOREIGN KEY (`State`)\n    REFERENCES `mydb`.`State` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Role`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (1, 'SystemAdministrator', NULL);\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (2, 'WorkspaceManager', NULL);\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (3, 'ProjectManager', NULL);\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (4, 'ProjectUser', NULL);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`User`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'shunichkaaaa', 'gdaria296@gmail.com', '51386Gh1@', NULL, 2);\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'TkachenkoOleksandr', 'informatikatkachenko@gmail.com', 'KL246FSn33', NULL, 1);\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'dobfedir', 'dobrovolskiy.fedir@gmail.com', '527Fw28YB2572', NULL, 4);\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'roninbean', 'sylenko.yaroslav@lll.kpi.ua', '27985Rwe91', NULL, 3);\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'Kosyanich', 'danchikukloock@gmail.com', '63yGD041FF', NULL, 4);\nINSERT INTO `mydb`.`User` (`id`, `username`, `email`, `password`, `avatar`, `Role`) VALUES (DEFAULT, 'Minicall', 'sydoruk.vladyslav@lll.kpi.ua', '736RHa3262', NULL, 4);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Status`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Status` (`id`, `name`) VALUES (DEFAULT, 'Unassigned');\nINSERT INTO `mydb`.`Status` (`id`, `name`) VALUES (DEFAULT, 'Accepted');\nINSERT INTO `mydb`.`Status` (`id`, `name`) VALUES (DEFAULT, 'Started');\nINSERT INTO `mydb`.`Status` (`id`, `name`) VALUES (DEFAULT, 'Completed');\n\nCOMMIT;\n")])])]),r("h2",{attrs:{id:"restfull-сервіс-для-управління-даними"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#restfull-сервіс-для-управління-даними"}},[n._v("#")]),n._v(" RESTfull сервіс для управління даними")]),n._v(" "),r("h3",{attrs:{id:"налаштування-express-сервера"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#налаштування-express-сервера"}},[n._v("#")]),n._v(" Налаштування Express сервера")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('const express = require("express");\nconst cors = require("cors");\nconst router = require("./routes");\nconst AppError = require("./utils/appError");\nconst errorHandler = require("./utils/errorHandler");\n\nconst app = express();\n// Use express.json() middleware to parse the URL encoded body\napp.use(express.json());\napp.use(cors());\napp.use("/api", router);\n\napp.all("*", (req, res, next) => {\n  next(new AppError(`The URL ${req.originalUrl} does not exists`, 404));\n});\napp.use(errorHandler);\n\nconst PORT = 3000;\napp.listen(PORT, () => {\n  console.log(`server running on port ${PORT}`);\n});\n\nmodule.exports = app;\n')])])]),r("h3",{attrs:{id:"підключення-до-бази-даних-mysql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#підключення-до-бази-даних-mysql"}},[n._v("#")]),n._v(" Підключення до бази даних MySQL")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('const mysql = require("mysql");\nconst conn = mysql.createConnection({\n  host: "localhost",\n  user: "root",\n  password: "root123",\n  database: "mydb",\n});\n\nconn.connect();\n\nmodule.exports = conn;\n')])])]),r("h3",{attrs:{id:"створення-контролерів-додатка"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#створення-контролерів-додатка"}},[n._v("#")]),n._v(" Створення контролерів додатка")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('const AppError = require("../utils/appError");\nconst conn = require("../services/db");\n\nexports.getAllUsers = (req, res, next) => {\n  conn.query("SELECT * FROM User", function (err, data, fields) {\n    if (err) return next(new AppError(err));\n    res.status(200).json({\n      status: "success",\n      length: data?.length,\n      data: data,\n    });\n  });\n};\n\nexports.createUser = (req, res, next) => {\n  if (!req.body) return next(new AppError("No form data found", 404));\n  const values = [\n    req.body.username,\n    req.body.email,\n    req.body.password,\n    req.body.Role,\n  ];\n  conn.query(\n    "INSERT INTO User (username, email, password, Role) VALUES(?)",\n    [values],\n    function (err, data, fields) {\n      if (err) return next(new AppError(err, 500));\n      res.status(201).json({\n        status: "success",\n        message: "user added!",\n      });\n    }\n  );\n};\n\nexports.getUserById = (req, res, next) => {\n  if (!req.params.id) {\n    return next(new AppError("No user id found", 404));\n  }\n  conn.query(\n    "SELECT * FROM User WHERE id = ?",\n    [req.params.id],\n    function (err, data, fields) {\n      if (err) return next(new AppError(err, 500));\n      res.status(200).json({\n        status: "success",\n        length: data?.length,\n        data: data,\n      });\n    }\n  );\n};\n\nexports.updateUser = (req, res, next) => {\n  if (!req.params.id) {\n    return next(new AppError("No user id found", 404));\n  }\n  conn.query(\n    "UPDATE User SET username=?, email=?, password=?, Role=? WHERE id=?",\n    [\n      req.body.username,\n      req.body.email,\n      req.body.password,\n      req.body.Role,\n      req.params.id,\n    ],\n    function (err, data, fields) {\n      if (err) return next(new AppError(err, 500));\n      res.status(201).json({\n        status: "success",\n        message: "user info updated!",\n      });\n    }\n  );\n};\n\nexports.deleteUser = (req, res, next) => {\n  if (!req.params.id) {\n    return next(new AppError("No todo id found", 404));\n  }\n  conn.query(\n    "DELETE FROM User WHERE id=?",\n    [req.params.id],\n    function (err, fields) {\n      if (err) return next(new AppError(err, 500));\n      res.status(201).json({\n        status: "success",\n        message: "user deleted!",\n      });\n    }\n  );\n};\n')])])]),r("h3",{attrs:{id:"створення-глобальних-обробників-помилок"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#створення-глобальних-обробників-помилок"}},[n._v("#")]),n._v(" Створення глобальних обробників помилок")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('class AppError extends Error {\n  constructor(msg, statusCode) {\n    super(msg);\n\n    this.statusCode = statusCode;\n    this.error = `${statusCode}`.startsWith("4") ? "fail" : "error";\n    this.isOperational = true;\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\nmodule.exports = AppError;\n')])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('module.exports = (err, req, res, next) => {\n  err.statusCode = err.statusCode || 500;\n  err.status = err.status || "error";\n  res.status(err.statusCode).json({\n    status: err.status,\n    message: err.message,\n  });\n};\n')])])]),r("h3",{attrs:{id:"створення-routes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#створення-routes"}},[n._v("#")]),n._v(" Створення routes")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('const express = require("express");\nconst controllers = require("../controllers");\nconst router = express.Router();\n\nrouter.route("/User").get(controllers.getAllUsers).post(controllers.createUser);\nrouter\n  .route("/User/:id")\n  .get(controllers.getUserById)\n  .put(controllers.updateUser)\n  .delete(controllers.deleteUser);\nmodule.exports = router;\n')])])])])}),[],!1,null,null,null);e.default=t.exports}}]);